{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\OneDrive\\\\Desktop\\\\password_generator\\\\client\\\\src\\\\Password.jsx\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './Password.css';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Password = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [passwordLength, setpasswordlength] = useState(12);\n  const [useSymbols, setUseSymbols] = useState(true);\n  const [useNumbers, setUseNumbers] = useState(true);\n  const [useLowerCase, setUseLowerCase] = useState(true);\n  const [useUpperCase, setUseUpperCase] = useState(true);\n  // const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const generatePassword = () => {\n    let charset = \"\";\n    let newPassword = \"\";\n    if (useSymbols) charset += \"!@#$%^&*()\";\n    if (useNumbers) charset += \"0123456789\";\n    if (useLowerCase) charset += \"abcdefghijklmnopqrstuvwxyz\";\n    if (useUpperCase) charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for (let i = 0; i < passwordLength; i++) {\n      newPassword += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n    setPassword(newPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"random password generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"passoword length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"8\",\n          max: \"32\",\n          onChange: e => setpasswordlength(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generatePassword,\n          children: \"generate password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkboxcont\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useSymbols,\n          onChange: () => setUseSymbols(!useSymbols)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }, this), \"symbols\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useNumbers,\n          onChange: () => setUseNumbers(!useNumbers)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 10\n        }, this), \"numbers\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useLowerCase,\n          onChange: () => setUseLowerCase(!useLowerCase)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }, this), \"lowercase\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: useUpperCase,\n          onChange: () => setUseUpperCase(!useUpperCase)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 10\n        }, this), \"uppercase\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"passwordbox\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Password, \"M+XI+eTXSz2fBOxEh3nOnI8yYSI=\");\n_c = Password;\nexport default Password;\nvar _c;\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"names":["logo","useState","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Password","_s","password","setPassword","passwordLength","setpasswordlength","useSymbols","setUseSymbols","useNumbers","setUseNumbers","useLowerCase","setUseLowerCase","useUpperCase","setUseUpperCase","generatePassword","charset","newPassword","i","charAt","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","e","target","value","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/win10/OneDrive/Desktop/password_generator/client/src/Password.jsx"],"sourcesContent":["import logo from './logo.svg';\r\nimport './Password.css';\r\nimport { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nconst Password=()=> {\r\n   \r\n  const [password,setPassword]=useState(\"\");\r\n  const [passwordLength,setpasswordlength]=useState(12);\r\n  const [useSymbols, setUseSymbols] = useState(true);\r\n  const [useNumbers, setUseNumbers] = useState(true);\r\n  const [useLowerCase, setUseLowerCase] = useState(true);\r\n  const [useUpperCase, setUseUpperCase] = useState(true);\r\n  // const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const generatePassword = ()=>{\r\n    let charset=\"\";\r\n    let newPassword=\"\";\r\n    if (useSymbols) charset += \"!@#$%^&*()\";\r\n        if (useNumbers) charset += \"0123456789\";\r\n        if (useLowerCase) charset += \"abcdefghijklmnopqrstuvwxyz\";\r\n        if (useUpperCase) charset += \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n \r\n        for (let i = 0; i < passwordLength; i++) {\r\n            newPassword += charset.charAt(Math.floor(Math.random() * charset.length));\r\n        }\r\n \r\n        setPassword(newPassword);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <h1>random password generator</h1>\r\n      <div className=\"inputContainer\">\r\n        <div className=\"number\">\r\n          <span>passoword length</span><input type=\"number\" min='8' max='32' onChange={(e)=>setpasswordlength(e.target.value)}/>\r\n          </div>\r\n        <div className=\"generate\">\r\n          <button onClick={generatePassword}>generate password</button>\r\n        </div>\r\n       <div className=\"checkboxcont\">\r\n         <input type='checkbox' checked={useSymbols} onChange={()=>setUseSymbols(!useSymbols)}/>symbols\r\n         <input type='checkbox' checked={useNumbers} onChange={()=>setUseNumbers(!useNumbers)}/>numbers\r\n         <input type='checkbox' checked={useLowerCase} onChange={()=>setUseLowerCase(!useLowerCase)}/>lowercase\r\n         <input type='checkbox' checked={useUpperCase} onChange={()=>setUseUpperCase(!useUpperCase)}/>uppercase\r\n       </div>\r\n       <div className=\"passwordbox\">\r\n        <input type='text' value={password}></input>\r\n       </div>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Password;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}