{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\OneDrive\\\\Desktop\\\\password_generator\\\\client\\\\src\\\\Logins.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logins = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8800/login', formData);\n      console.log('User logged in:', response);\n\n      // Check if response contains a valid token or user data indicating successful login\n      if (response.status === 200) {\n        // Optionally, store user data or token in localStorage or a global state management solution\n\n        // Navigate to '/' after successful login\n        const id = response.data.user.id;\n        console.log(response);\n        navigate('/' + id);\n      } else {\n        console.error('Invalid credentials');\n        // Optionally, display an error message to the user\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n      alert(\"invalid credentials\");\n      // Optionally, display an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Logins, \"qu6M4P7zpuIhpGsg3eekhOIyiGI=\", false, function () {\n  return [useNavigate];\n});\n_c = Logins;\nexport default Logins;\nvar _c;\n$RefreshReg$(_c, \"Logins\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","jsxDEV","_jsxDEV","Logins","_s","formData","setFormData","email","password","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","console","log","status","id","data","user","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","to","_c","$RefreshReg$"],"sources":["C:/Users/win10/OneDrive/Desktop/password_generator/client/src/Logins.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nconst Logins = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8800/login', formData);\r\n      console.log('User logged in:', response);\r\n\r\n      // Check if response contains a valid token or user data indicating successful login\r\n      if (response.status===200) { \r\n        // Optionally, store user data or token in localStorage or a global state management solution\r\n\r\n        // Navigate to '/' after successful login\r\n        const id=response.data.user.id;\r\n        console.log(response);\r\n        navigate('/'+id);\r\n      } else {\r\n        console.error('Invalid credentials');\r\n        // Optionally, display an error message to the user\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n      alert(\"invalid credentials\");\r\n      // Optionally, display an error message to the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Don't have an account? <Link to=\"/signup\">Sign up</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logins;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}